#!/bin/bash -e

. @osdir@/common.sh

GET_SIZE=false

while getopts "s" opt; do
    case $opt in
        s) GET_SIZE=true ;;
    esac
done

shift $(($OPTIND - 1))

IMAGE_NAME=$1
IMAGE_TYPE=$2

if [[ "$IMAGE_NAME" =~ ^local:// ]]; then
    IMAGE_NAME="${IMAGE_NAME:8}"
elif [[ "$IMAGE_NAME" =~ ^file:// ]]; then
    IMAGE_NAME="${IMAGE_NAME:7}"
    log_warning "The file:// backend identifier is deprecated and" \
                "will be removed in the future. Use local:// instead."
fi

canonical_image_dir="$(canonicalize "$IMAGE_DIR")"
if [ ! -d "$canonical_image_dir" ]; then
    log_error "The IMAGE_DIR directory: \`$IMAGE_DIR' does not exist."
    report_error "Unable to retrieve image file."
    exit 1
fi

image_file="$IMAGE_DIR/$IMAGE_NAME"
if [ ! -e "$image_file" ]; then
    if [ -e "$image_file.$IMAGE_TYPE" ] ; then
        image_file="$image_file.$IMAGE_TYPE"
        log_warning "The \`.$IMAGE_TYPE' extension is missing from" \
            "the local backend id. This id form is deprecated and" \
            "will be remove in the future."
    else
        log_error "Image file \`$image_file' does not exist."
        report_error "Unable to retrieve image file."
        exit 1
    fi
fi

canonical_image_file="$(canonicalize "$image_file")"

if [[ "$canonical_image_file" != "$canonical_image_dir"* ]]; then
    log_error "Image ID points to a file outside the image directory: \`$IMAGE_DIR'"
    report_error "Invalid image ID"
    exit 1
fi

if $GET_SIZE; then
    stat -L -c %s "$image_file"
else
    $DD bs=4M if=$image_file iflag=fullblock
fi

exit 0
